<!DOCTYPE html>
<html ng-app="myApp">
<head >
    <title>Hotel</title>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
    <link rel="stylesheet" href="/stylesheets/hotel.css">

    <script src="../bower_components/angular/angular.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js"></script>
    <script src="../bower_components/angular-route/angular-route.js"></script>
    <script class="cssdeck" src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <script class="cssdeck" src="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.1/js/bootstrap.min.js"></script>
    <script src="../bower_components/ng-file-upload-shim/angular-file-upload-shim.min.js"></script>
    <script src="../bower_components/ng-file-upload/angular-file-upload.min.js"></script>
    <script src="../bower_components/filepicker-js/filepicker.js"></script>
    <script src="../bower_components/angular-filepicker/dist/angular_filepicker.js"></script>



    <script src="http://angular-ui.github.io/bootstrap/ui-bootstrap-tpls-0.6.0.js"> </script>

    <script src="/javascripts/hotelController.js"></script>


</head>
<body ng-controller="hotelContact">
<div class="row">
    <div class="col-sm-2">
        <div id="logo">
            <div class="block" style="padding-top: 20px;"><p>EPickPlace</p></div>
            <div class="block"><p>hosting</p></div>
        </div>
        <div id="menu">

            <div class="row-hg-2">setup everything in 4 easy  steps</div>
            <a href="/host/menu#/rooms"><div class="row-hg-2" ng-click="setTitle('Rooms')" id="first"><p class="menuitem">Rooms</p></div></a>
            <a href="/host/menu#/amenities"><div class="row-hg-2" id="second" ng-click="setTitle('Price')"><p class="menuitem">Amenities</p></div></a>
            <a href="/host/menu#/pictures"><div class="row-hg-2" id="third" ng-click="setTitle('Amenities')"><p class="menuitem">Pictures</p></div></a>
            <a href="/host/contact"><div class="row-hg-2" id="forth" ng-click="setTitle('Pictures')"><p class="menuitem">Contact</p></div></a>
        </div>
    </div>
    <div class="col-sm-10">
        <!--<div id="title">{{title}}</div>-->
        <div id="here"><h1>Contact</h1></div>

        <div id="container">

            <div class="row">
                <div class="col-md-1">

                </div>
                <div class="col-md-10">
                    <div class="col-md-6">

                        <label for="file-input">
                            <img ng-src="{{superhero.picture.url}}" />
                        </label>
                        <input  id="file-input" type="file"  ng-file-select="onFileSelect($files)">
                        <div style="display: block">
                            <input style="display: block;width: 100%;" type="text" ng-model="superhero.name" placeholder="resort name"/>
                            <input style="display: block ;width: 100%;" type="text" ng-model="superhero.phone" placeholder="phone number"/>
                            <input style="display: block ;width: 100%;" type="text" ng-model="superhero.prefix" placeholder="phone prefix"/>
                            <input style="display: block ;width: 100%;" type="text" ng-model="superhero.email" placeholder="email"/>

                            <input ng-model="latitude" id="lat" class="controls"  type="text">
                            <input ng-model="longitude" id="long"  class="latlong controls" type="text"  >

                        </div>

                    </div>
                    <div class="col-md-6" id="wtf">
                        <input id="pac-input" class="controls" type="text"
                               ng-model ="superhero.location" placeholder="Enter a location" required>
                        <div id="type-selector" class="controls" style="visibility: hidden;">
                            <input type="radio" name="type" id="changetype-all" checked="checked">
                            <label for="changetype-all">All</label>

                            <input type="radio" name="type" id="changetype-establishment">
                            <label for="changetype-establishment">Establishments</label>

                            <input type="radio" name="type" id="changetype-address">
                            <label for="changetype-address">Addresses</label>

                            <input type="radio" name="type" id="changetype-geocode">
                            <label for="changetype-geocode">Geocodes</label>
                        </div>

                        <div id="map"></div>
                    </div>
                    <button type="submit" ng-click="uploadPicture()" id="okbu" style="bottom:-50px">OK</button>
                </div>
                <div class="col-md-1">

                </div>
            </div>
        </div>


    </div>
</div>

</body>
<script>
    function initMap() {

        var map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: -33.8688, lng: 151.2195},
            zoom: 13
        });
        $('#modalOneModal').on('shown.bs.modal', function () {
            google.maps.event.trigger(map, 'resize');
            map.setCenter(new google.maps.LatLng(-33.8688,151.2195));
        });

        var input = /** @type {!HTMLInputElement} */(
                document.getElementById('pac-input'));

        var types = document.getElementById('type-selector');
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);

        var infowindow = new google.maps.InfoWindow();
        var marker = new google.maps.Marker({
            map: map,
            anchorPoint: new google.maps.Point(0, -29)
        });

        autocomplete.addListener('place_changed', function() {
            infowindow.close();
            marker.setVisible(false);
            var place = autocomplete.getPlace();
            if (!place.geometry) {
                window.alert("Autocomplete's returned place contains no geometry");
                return;
            }

// If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(17);  // Why 17? Because it looks good.
            }
            marker.setIcon(/** @type {google.maps.Icon} */({
                url: place.icon,
                size: new google.maps.Size(71, 71),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(17, 34),
                scaledSize: new google.maps.Size(35, 35)
            }));
            marker.setPosition(place.geometry.location);
            marker.setVisible(true);


            var address = '';
            if (place.address_components) {
                address = [
                    (place.address_components[0] && place.address_components[0].short_name || ''),
                    (place.address_components[1] && place.address_components[1].short_name || ''),
                    (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');
            }
            console.log(place.geometry.location);
            infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
            infowindow.open(map, marker);
            document.getElementById("lat").value = place.geometry.location.lat().toFixed(2);
            document.getElementById("long").value = place.geometry.location.lng().toFixed(2);

        });

        // Sets a listener on a radio button to change the filter type on Places
        // Autocomplete.
        function setupClickListener(id, types) {
            var radioButton = document.getElementById(id);
            radioButton.addEventListener('click', function() {
                autocomplete.setTypes(types);
            });
        }

        setupClickListener('changetype-all', []);
        setupClickListener('changetype-address', ['address']);
        setupClickListener('changetype-establishment', ['establishment']);
        setupClickListener('changetype-geocode', ['geocode']);
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD_qbqn3n1WmK7SwvCOWZ1eMRwIk5sdiI0&libraries=places&callback=initMap"
        async defer></script>

</html>