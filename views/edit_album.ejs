<!DOCTYPE html>
<html lang="en" ng-app="picturesApp">
<head>
    <meta name="description" content="Superhero database">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular-animate.js"></script>
    <script src="//angular-ui.github.io/bootstrap/ui-bootstrap-tpls-1.3.3.js"></script>

    <!-- CSS -->
    <link rel="stylesheet" href="../bower_components/bootstrap/dist/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="../stylesheets/albums.css"/>


    <!-- JS libraries -->
    <!--<script src="http://maps.googleapis.com/maps/api/js"></script>-->


   <!-- <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false">
    </script>-->
    <!--<script src="../bower_components/angular/angular.js"></script>-->

    <script type="text/javascript" src="//api.filestackapi.com/filestack.js"></script>


    <script src="../bower_components/angular-route/angular-route.js"></script>
    <script src="../bower_components/filepicker-js/filepicker.js"></script>
    <script src="../bower_components/angular-filepicker/dist/angular_filepicker.js"></script>


    <script src="/javascripts/addSuperheroController.js"></script>

    <script src="/javascripts/galleryController.js"></script>

    <script src="/javascripts/detailController.js"></script>

    <script src="/javascripts/PicturesApp.js"></script>



</head>
<body ng-controller="pickerController" >

<nav class="navbar navbar-default">
    <div class="navbar-header">
        <a class="navbar-brand" href="/home">EPickPlace</a>
    </div>
    <ul class="nav navbar-nav">
        <li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown">YOU <span class="caret"></span></a>
            <ul class="dropdown-menu">
                <li><a href="/home/profile">Profile</a></li>
                <li><a href="/home/albums">Albums</a></li>
                <!--<li><a href="#">Page 1-3</a></li>-->
            </ul>
        </li>
        <li><a href="#">Page 2</a></li>
    </ul>
    </div>
    <img  class="circle" src="/images/pick.jpg" ng-click="uploadMultiple()" ng-src="{{superhero.picture.url | fpConvert: {filter:'sharpen', w:500} }}">
</nav>



<div class="row edit_album">
    <a href="/home/albums">Back to albums list</a>
    <div class="row albumcover">
        <img class="albumimage" ng-src="{{pictures[0].url}}">
        <input type="text" value="Title" class="titleinput">
        <input type="text" value="Description" class="titleinput" style="margin:8% 40%;height:inherit">
    </div>

    <div class="row pictures_edit">

            <div ng-repeat="pic in pictures">
            <div class="images">
                       <img class="images" ng-click="open(pic.url,pic.description,pic.title,pic.coordinates.lat,pic.coordinates.lng,pic.location)" ng-model="pic_url" ng-src="{{pic.url}}" id="pic_url"  name="pic_url">

                </div>
            </div>

    </div>

</div>

<script type="text/ng-template" id="myModalContent.html">

        <div class="modal-content">
            <div class="modal-body" >
                <img  class="editimage" ng-model="picture" ng-src="{{picture}}">
                    <div>
                        <input class="input" type="text" ng-model="title" placeholder="Title">
                        <textarea style="position:absolute;top:15%;height:30%;width:40%; margin:1%;opacity:0.8"type="text" placeholder="This picture was taken in... . The photo represents... .What surprised me... .
                        "  ng-model="description"></textarea>
                        <!--<button class="btn" style="float:right;opacity: 0.8;background-color: #122b40;position:absolute;top:47%;margin-left:35%;" data-toggle="modal" data-target="#modalOneModal">Next</button>-->
                        <span a href="#modalOneModal" data-toggle="modal" ng-click="cancel()" data-target="#modalOneModal">&#8594;</span>
                    </div>
            </div>

        </div>

</script>

<!--SECOND MODAL-->
<!--<button class="btn btn-primary btn-lg" data-toggle="modal" data-target="#modalOneModal">
    Launch demo modal
</button>-->
<!-- Modal -->
<div class="modal fade" id="modalOneModal" tabindex="-1" role="dialog" aria-labelledby="modalOneLabel" aria-hidden="true">

    <div class="modal-dialog">

        <div class="modal-content  bg-info" >
            <div class="modal-header btn-info">
                <h4 class="modal-title" id="modalOneLabel">Pick the location</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body" ng-style="style">
                <input id="pac-input" class="controls" type="text"
                       ng-model ="location" placeholder="Enter a location">
                <div id="type-selector" class="controls">
                    <input type="radio" name="type" id="changetype-all" checked="checked">
                    <label for="changetype-all">All</label>

                    <input type="radio" name="type" id="changetype-establishment">
                    <label for="changetype-establishment">Establishments</label>

                    <input type="radio" name="type" id="changetype-address">
                    <label for="changetype-address">Addresses</label>

                    <input type="radio" name="type" id="changetype-geocode">
                    <label for="changetype-geocode">Geocodes</label>
                </div>

                <label for="lat">Lat:</label>
                <input ng-model="lati" id="lat" class="controls" readonly type="text"  >

                <label for="long">Long:</label>
                <input ng-model="longi" id="long"  class="latlong controls" type="text" readonly >

                <div id="map" ></div>

            </div>
            <div class="modal-footer">
                <button type="button" ng-click="finish(location,getLati(),getLongi())" class="btn btn-default" data-dismiss="modal">Finish</button>
            </div>

            </div>
        </div>
    </div>
<script>


    function initMap() {

        var map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: -33.8688, lng: 151.2195},
            zoom: 13
        });
        $('#modalOneModal').on('shown.bs.modal', function () {
            google.maps.event.trigger(map, 'resize');
            map.setCenter(new google.maps.LatLng(-33.8688,151.2195));
        });

        var input = /** @type {!HTMLInputElement} */(
                document.getElementById('pac-input'));

        var types = document.getElementById('type-selector');
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);

        var infowindow = new google.maps.InfoWindow();
        var marker = new google.maps.Marker({
            map: map,
            anchorPoint: new google.maps.Point(0, -29)
        });

        autocomplete.addListener('place_changed', function() {
            infowindow.close();
            marker.setVisible(false);
            var place = autocomplete.getPlace();
            if (!place.geometry) {
                window.alert("Autocomplete's returned place contains no geometry");
                return;
            }

            // If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(17);  // Why 17? Because it looks good.
            }
            marker.setIcon(/** @type {google.maps.Icon} */({
                url: place.icon,
                size: new google.maps.Size(71, 71),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(17, 34),
                scaledSize: new google.maps.Size(35, 35)
            }));
            marker.setPosition(place.geometry.location);
            marker.setVisible(true);


            var address = '';
            if (place.address_components) {
                address = [
                    (place.address_components[0] && place.address_components[0].short_name || ''),
                    (place.address_components[1] && place.address_components[1].short_name || ''),
                    (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');
            }
            console.log(place.geometry.location);
            infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
            infowindow.open(map, marker);
            document.getElementById("lat").value = place.geometry.location.lat().toFixed(2);
            document.getElementById("long").value = place.geometry.location.lng().toFixed(2);

        });

        // Sets a listener on a radio button to change the filter type on Places
        // Autocomplete.
        function setupClickListener(id, types) {
            var radioButton = document.getElementById(id);
            radioButton.addEventListener('click', function() {
                autocomplete.setTypes(types);
            });
        }

        setupClickListener('changetype-all', []);
        setupClickListener('changetype-address', ['address']);
        setupClickListener('changetype-establishment', ['establishment']);
        setupClickListener('changetype-geocode', ['geocode']);
    }


</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBLsJCUCQi1mOlMvLkeN7jPstEB4GX0F5E&libraries=places&callback=initMap"
        async defer></script>



</body>
</html>




